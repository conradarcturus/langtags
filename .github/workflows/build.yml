name: Build
on:
  workflow_call:
    inputs:
      sldr-artifact-id:
        type: string
        required: false
        default: null
      sldr-release:
        type: boolean
        required: false
        default: false
    outputs:
      artifact-id:
        description: "The artifact uploaded by this build"
        value: ${{ jobs.build.outputs.artifact.id }}    
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.upload.outputs }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install langtags package and depedencies
      run: pip install . \
          git+https://github.com/silnrsi/{sldrtools#sldrtools,palaso-python#palaso} \
          six

    - name: Find latest SLDR dependency
      uses: actions/github-script@v7
      id: find-sldr
      with:
        script: |
          const sldr_branch = context.ref_name == 'release' ? 'release' : 'master'
          const sldr_artifact_id = core.getInput("sldr-artifact-input")
          if (sldr_artifact_id)
          {
            core.setOutput("artifact-id", sldr_artifact_id)
          }
          else
          {
            const result = await github.rest.actions
              .listArtifactsForRepo({
                owner: "silnrsi",
                repo: "sldr"
              })
            core.debug(context)
            const artifact = result.data.artifacts.find(function (artifact, index, artifacts) {
                  return artifact.workflow_run.head_branch == sldr_branch
                })
            if (!artifact) {
              core.setFailed(`No recent SDLR artifacts found on silnrsi/sldr branch: ${context.ref}`)
            }
            core.debug(artifact)
            core.setOutput("artifact-id", artifact.id)
          }

    - uses: actions/cache@v4
      id: cached-sldr
      with:
        path: |
          unflat
          flat
        key: sldr-${{ steps.find-sldr.outputs.artifact-id }}

    - name: Download the SLDR dependency
      if: steps.cached-sldr.outputs.cache-hit != 'true'
      uses: actions/github-script@v7
      env:
        artifact_id: ${{ steps.find-sldr.outputs.artifact-id }}
      with:
        script: |
          const fs = require('fs')
          const response = await github.rest.actions
            .downloadArtifact({
              owner: "silnrsi",
              repo: "sldr",
              artifact_id: process.env.artifact_id,
              archive_format: "zip"
            })
          fs.writeFileSync('sldr.zip', Buffer.from(response.data))

    - name: Extract SLDR dependency
      if: steps.cached-sldr.outputs.cache-hit != 'true'
      run: |
        unzip -q sldr.zip
        rm sldr.zip
    
    # Build it
    - name: Generate langtags
      run: |
        make SLDR=unflat FLATDIR=flat build
    - uses: actions/upload-artifact@v4
      id: upload
      with:
        name: langtags
        path: |
          pub/**

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - run: pip install . \
          git+https://github.com/silnrsi/{sldrtools#sldrtools,palaso-python#palaso} \
          six

    - uses: actions/download-artifact@v4
      with:
        name: langtags
        path: pub

    # Test it.
    - name: Test langtags
      id: langtags
      run: |
        python3 -m unittest tests.test_json tests.python.test_python tests.test_basic
